{"version":3,"sources":["components/Total.js","theme.js","components/Graph.js","components/TableCountry.js","components/WorldMap.js","components/Update.js","components/Pie.js","components/MapPopup.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","title","margin","marginTop","fontSize","number","fontWeight","color","palette","primary","main","loading","Item","total","setTotal","setDeaths","setRecovered","setInitialTotal","useEffect","axios","get","headers","then","res","console","log","data","confirmed","deaths","recovered","classes","className","CircularProgress","toLocaleString","createMuiTheme","type","background","default","table","hover","Graph","currentCountry","tabsValue","setTabsValue","countryData","setCountryData","useState","country","setCountry","React","status","setStatus","printedName","countryConfirmedCases","mainCountry","mainSlug","forEach","item","Country","Province","province","Date","Cases","push","options","chart","stacked","height","zoom","enabled","autoScaleYaxis","toolbar","autoSelected","dataLabels","text","align","style","fill","gradient","hadeIntensity","inverseColors","opacityFrom","opacityTo","stops","markers","size","tooltip","colors","yaxis","labels","formatter","value","xaxis","series","name","width","Tabs","onChange","event","newValue","indicatorColor","Tab","label","container","display","props","maxWidth","row","cursor","clickedRow","backgroundColor","rightCell","rightHeader","textAlign","SimpleTable","setSelectedCountry","initialTotal","setConfirmed","setChartData","countColor","activeCountry","setActiveCountry","initialData","setInitialData","sortTotalCases","a","b","casesA","right","casesB","comparison","length","elem","find","left","sort","handleRowClick","cases","code","ClickableRow","leftElement","rightElement","isActive","onClick","handleClick","TableRow","key","TableCell","component","scope","TableContainer","Paper","Table","stickyHeader","aria-label","TableBody","map","memo","setTooltipContent","MapWorld","currentCountryCode","setPopupData","setdata","coordinates","countryCoord","setCountryCoord","toLowerCase","latitude","LatLong","lat","longitude","long","array","rayon","Math","sqrt","CustomZoomableGroup","children","restProps","useZoomPan","mapRef","transformString","position","ref","transform","Box","data-tip","projectionConfig","scale","center","geography","geographies","geo","rsmKey","outline","pressed","index","death","r","k","stroke","strokeWidth","Update","date","updateDate","setUpdateDate","formattedDate","dateformat","Donut","infos","legend","marginBottom","leftContainer","flexDirection","justifyItems","mainContainer","dataContainer","marginLeft","marginRight","devider","signatureContainer","signaturefull","signature","MapPopup","popupData","Divider","orientation","flexItem","variant","light","Pie","src","alt","border","justifyContent","borderRadius","leftBox","totalContainer","tableCountryContainer","tableHeaderContainer","padding","updateContainer","centerBox","mapContainer","bottomContainer","paddingLeft","paddingRight","parentMap","hideMapPopup","mapPopup","top","minHeight","rightBox","rightTablesContainer","jusityContent","leftTable","leftTableHeaderContainer","alignItems","tableTitle","deathsCount","recoveredCount","rightTable","chartsContainer","App","selectedCountry","isRequestSuccess","setIsRequestSuccess","confirmedDataTable","setConfirmedDataTable","deathsDataTable","setDeathsDataTable","recoveredDataTable","setRecoveredDataTable","setMapWorld","PopupData","CountryJson","Slug","confirmedDataArray","deathsDataArray","recoveredDataArray","CodeAndDeathArray","Countries","confirmedData","deathsData","recoveredData","CodeAndDeath","TotalConfirmed","TotalDeaths","TotalRecovered","CountryCode","catch","err","content","setContent","borderColor","boxShadow","Total","TableCountry","WorldMap","setChartTabsValue","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.bce59009.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport axios from 'axios';\nimport { CircularProgress } from '@material-ui/core';\n\nconst Item = ({ total, setTotal, setDeaths, setRecovered, setInitialTotal}) => {\n\n  useEffect(() => {\n    axios.get(\"https://covid-19-statistics.p.rapidapi.com/reports/total\", {\n      headers: {\n        \"x-rapidapi-host\": \"covid-19-statistics.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"3c5c0043ddmsh0e893e57f831f61p13ffc2jsne0a414d75852\",\n        \"useQueryString\": true\n      }\n    })\n      .then(res => {\n        console.log(\"TOTAL REQUEST\", res.data);\n        setInitialTotal({\n          confirmed: res.data.data.confirmed, \n          deaths: res.data.data.deaths,\n          recovered: res.data.data.recovered\n        })\n        setTotal(res.data.data.confirmed);\n        setDeaths(res.data.data.deaths);\n        setRecovered(res.data.data.recovered);\n      })\n  }, [setTotal, setDeaths, setRecovered, setInitialTotal]);\n\n  const classes = useStyles()\n  return (\n    <div>\n      <p className={classes.title}>Total confirmed</p>\n      {total === -1 && (\n        <div>\n          <CircularProgress className={classes.loading}/>\n        </div>\n      )}\n      {total !== -1 && (\n        <div>\n          <p className={classes.number}>{total.toLocaleString(\"fr-FR\")}</p>\n        </div>\n      )}\n    </div>\n  )\n}\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    margin: 0,\n    marginTop: 10,\n    fontSize: \"1vw\"\n  },\n  number: {\n    margin: 0,\n    fontSize: \"2.5vw\",\n    fontWeight: \"bold\",\n    color: theme.palette.primary.main\n  },\n  loading: {\n    marginTop: 10\n  }\n}))\n\nexport default Item","import { createMuiTheme } from '@material-ui/core/styles'\nconst theme = createMuiTheme({\n    palette: {\n        type: \"dark\",\n        background: {\n            default: \"#2D2D2D\",\n        },\n        primary: {\n            main: '#ffe62d',\n        },\n        table: {\n            main: \"#2D2D2D\",\n            hover: \"#333333\"\n        }\n    },\n})\nexport default theme","import React, { useState, useEffect } from \"react\"\nimport Chart from \"react-apexcharts\"\nimport theme from \"../theme\"\nimport axios from \"axios\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nconst Graph = ({ currentCountry, tabsValue, setTabsValue, countryData, setCountryData}) => {\n  const [country, setCountry] = useState(currentCountry);\n  // const [tabsValue, setTabsValue] = React.useState(0);\n  const [status, setStatus] = React.useState(\"confirmed\");\n  let printedName = \"\";\n  if (status === \"confirmed\")\n  printedName = \"Total confirmed\";\n  else if (status === \"recovered\")\n  printedName = \"Total recovered\";\n  else\n  printedName = \"Total deaths\";\n\n  useEffect(() => {\n    console.log(\"CASE CHARTS USE EFFECT\", currentCountry);\n    if (country !== currentCountry) {\n      setCountry(currentCountry);\n      console.log(\"SET COUNTRY\");\n    }\n  }, [country, currentCountry])\n\n  useEffect(() => {\n    setCountryData([]);\n    const countryConfirmedCases = [];\n    console.log(\"HEY COUNTRY\", country)\n    if (country.mainCountry !== \"\") {\n      axios.get(`https://api.covid19api.com/total/dayone/country/${country.mainSlug}/status/${status}`, { \"headers\": { \"Access-Control-Allow-Origin\": '*' } })\n      .then(res => {\n        console.log(res.data);\n        if (res.data) {\n          res.data.forEach(function (item) {\n              var data = {}\n              if (item.Country === country.mainCountry && item.Province === country.province) {\n                data[\"x\"] = item.Date;\n                data[\"y\"] = item.Cases;\n                countryConfirmedCases.push(data);\n              }\n            })\n            setCountryData(countryConfirmedCases);\n          }\n        })\n      }\n  }, [country, status, printedName, setCountryData])\n  \n  const options = {\n    chart: {\n      type: \"area\",\n      stacked: false,\n      height: \"100%\",\n      zoom: {\n        type: \"x\",\n        enabled: true,\n        autoScaleYaxis: true,\n      },\n      toolbar: {\n        autoSelected: \"zoom\"\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    title: {\n      text: printedName + \" evolution\",\n      align: \"left\",\n      style: {\n        color: \"white\"\n      }\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        hadeIntensity: 1,\n        inverseColors: false,\n        opacityFrom: 0.5,\n        opacityTo: 0,\n        stops: [0, 90, 100]\n      },\n    },\n    markers: {\n      size: 0\n    },\n    tooltip: {\n      theme: \"dark\"\n    },\n    colors: [theme.palette.primary.main],\n    yaxis: {\n      title: {\n        text: \"Cases\",\n        style: {\n          color: \"white\"\n        }\n      },\n      labels: {\n        formatter: function (value) {\n          return value.toLocaleString(\"fr-Fr\")\n        },\n        style: {\n          colors: \"white\"\n        }\n      }\n    },\n    xaxis: {\n      type: \"datetime\",\n      labels: {\n        style: {\n          colors: \"white\"\n        }\n      }\n    },\n  }\n  const series = [\n    {\n      name: \"\",\n      data: countryData\n    },\n  ]\n  \n  const handleChange = (event, newValue) => {\n    console.log(newValue);\n    if (newValue === 0) {\n      setStatus(\"confirmed\");\n      // setTotal(-1);\n    }\n    else if (newValue === 1)\n    setStatus(\"deaths\")\n    else if (newValue === 2) {\n      setStatus(\"recovered\")\n      // setDeaths(-1);\n    }\n    setTabsValue(newValue);\n  }\n  \n  return (\n    <div>\n      <Chart\n        options={options}\n        series={series}\n        type=\"area\"\n        width=\"100%\"\n        />\n      <Tabs value={tabsValue} onChange={handleChange} indicatorColor=\"primary\" >\n        <Tab label=\"Confirmed\" />\n        <Tab label=\"Deaths\" />\n        <Tab label=\"Recovered\" />\n      </Tabs>\n    </div>\n  )\n}\n\nexport default Graph;\n","import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"inline-block\",\n    height: props => props.height\n  },\n  table: {\n    maxWidth: 650,\n  },\n  row: {\n    cursor: \"pointer\",\n  },\n  clickedRow: {\n    cursor: \"pointer\",\n    backgroundColor: theme.palette.table.main,\n    '&:hover': {\n      backgroundColor: theme.palette.table.hover + \"!important\",\n    },\n  },\n  // tableHeaderContainer: {\n  //   display: \"flex\",\n  //   justifyContent: \"space-between\",\n  //   padding: 10,\n  // },\n  rightCell: {\n    fontWeight: \"bold\",\n    color: props => props.color\n  },\n  rightHeader: {\n    textAlign: \"right\"\n  }\n}));\n\nconst SimpleTable = ({ setSelectedCountry, initialTotal, setConfirmed, setDeaths, setRecovered, data, currentCountry, setChartData, status, height, countColor }) => {\n  const color = countColor ? countColor : \"white\";\n  const classes = useStyles({ height, color });\n  const [countryData, setCountryData] = useState([]);\n  const [activeCountry, setActiveCountry] = useState(null);\n  const [initialData, setInitialData] = useState(null);\n\n  const sortTotalCases = (a, b) => {\n    const casesA = a.right;\n    const casesB = b.right;\n\n    let comparison = 0;\n    if (casesA > casesB) {\n      comparison = -1;\n    } else if (casesA < casesB) {\n      comparison = 1;\n    }\n    return comparison;\n  }\n\n  useEffect(() => {\n  }, [initialData])\n  useEffect(() => {\n    if (countryData.length > 0 && initialData === null) {\n      setInitialData(countryData);\n    }\n  }, [countryData, initialData])\n\n  useEffect(() => {\n    if (currentCountry && currentCountry.mainCountry !== \"\") {\n      const elem = data.find(item => {\n        return item.left === currentCountry.mainCountry\n      })\n      if (status === \"deaths\") {\n        setConfirmed(elem.confirmed);\n        setDeaths(elem.right);\n      }\n      if (status === \"recovered\") {\n        setRecovered(elem.right);\n      }\n    }\n  }, [currentCountry, data, setConfirmed, setDeaths, setRecovered, status])\n\n  useEffect(() => {\n    data.sort(sortTotalCases);\n    setCountryData(data);\n  }, [data])\n\n  const handleRowClick = ((country, cases, code) => {\n    if (activeCountry !== country) {\n      console.log(\"CLICKED CODE\", code);\n      setActiveCountry(country);\n      setSelectedCountry({\n        country: country,\n        code: code\n      });\n      if (status === \"confirmed\") {\n        setConfirmed(cases);\n      }\n      else if (status === \"deaths\") {\n        setDeaths(cases);\n      }\n    }\n    else {\n      console.log(\"DESELECT\");\n      setActiveCountry(null);\n      setSelectedCountry({\n        country: \"\",\n        code: \"\"\n      });\n      setDeaths(initialTotal.deaths);\n      setConfirmed(initialTotal.confirmed);\n      setRecovered(initialTotal.recovered);\n      setChartData([]);\n      // setCountryData(initialData);\n    }\n  })\n\n  const ClickableRow = ({ leftElement, rightElement, code, isActive, onClick }) => {\n    const handleClick = (left, right, code) => onClick(left, right, code)\n\n    return (\n      <TableRow className={isActive ? classes.clickedRow : classes.row} hover key={leftElement} onClick={() => handleClick(leftElement, rightElement, code)}>\n        <TableCell component=\"th\" scope=\"row\">\n          {leftElement}\n        </TableCell>\n        <TableCell className={classes.rightCell} align=\"right\">{rightElement.toLocaleString(\"fr-FR\")}</TableCell>\n      </TableRow>\n    )\n  }\n\n  return (\n    <div>\n      <TableContainer component={Paper} className={classes.container}>\n        <Table stickyHeader className={classes.table} aria-label=\"simple table\">\n          <TableBody>\n            {countryData.length > 1 && countryData.map(function (row) {\n              return (\n                <ClickableRow\n                  key={row.left}\n                  leftElement={row.left}\n                  rightElement={row.right}\n                  code={row.code}\n                  isActive={activeCountry === row.left}\n                  onClick={handleRowClick} />\n              )\n            })}\n            {/* {countryData.left && (\n              <ClickableRow\n                key={countryData.left}\n                leftElement={countryData.left}\n                rightElement={countryData.right}\n                isActive={activeCountry === countryData.left}\n                onClick={handleRowClick}\n              />\n            )} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nexport default SimpleTable;\n","import React, { memo, useEffect, useState } from \"react\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  useZoomPan\n} from \"react-simple-maps\";\n\nimport LatLong from \"../countrycode-latlong.json\"\nimport theme from \"../theme\";\nimport Box from \"@material-ui/core/Box\"\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-50m.json\";\n\n// const rounded = num => {\n//   if (num > 1000000000) {\n//     return Math.round(num / 100000000) / 10 + \"Bn\";\n//   } else if (num > 1000000) {\n//     return Math.round(num / 100000) / 10 + \"M\";\n//   } else {\n//     return Math.round(num / 100) / 10 + \"K\";\n//   }\n// };\n\nconst MapChart = ({ setTooltipContent, MapWorld, currentCountryCode, setPopupData }) => {\n\n  const [data, setdata] = useState([]);\n  const [countryCoord, setCountryCoord] = useState({\n    coordinates: [0, 0],\n    zoom: 1\n  });\n\n  useEffect(() => {\n    if (currentCountryCode !== \"\") {\n\n      console.log(\"MAP CURRENT CODE\", currentCountryCode.toLowerCase());\n      const latitude = LatLong[currentCountryCode.toLowerCase()].lat\n      const longitude = LatLong[currentCountryCode.toLowerCase()].long\n\n      setCountryCoord({\n        coordinates: [longitude, latitude],\n        zoom: 6\n      })\n    }\n  }, [currentCountryCode])\n\n  useEffect(() => {\n    var array = MapWorld;\n    array.forEach(function (item) {\n      if (LatLong[item.code.toLowerCase()]) {\n        item.latitude = LatLong[item.code.toLowerCase()].lat\n        item.longitude = LatLong[item.code.toLowerCase()].long\n      }\n      item.rayon = Math.sqrt(item.confirmed) / 50;\n    })\n\n    setdata(array)\n\n  }, [MapWorld])\n\n  const CustomZoomableGroup = ({ children, ...restProps }) => {\n    const { mapRef, transformString, position } = useZoomPan(restProps);\n    return (\n      <g ref={mapRef}>\n        <rect width={1920} height={1080} fill=\"transparent\" />\n        <g transform={transformString}>{children(position)}</g>\n      </g>\n    );\n  };\n\n  return (\n    <Box>\n      <ComposableMap\n        data-tip=\"\"\n        projectionConfig={{ scale: 200 }}\n        style={{\n          width: \"100%\",\n          height: \"750\",\n        }}\n      >\n        <CustomZoomableGroup zoom={countryCoord.zoom} center={countryCoord.coordinates}>\n          {position => (\n            <>\n              <Geographies geography={geoUrl}>\n                {({ geographies }) =>\n                  geographies.map(geo => (\n                    <Geography\n                      key={geo.rsmKey}\n                      geography={geo}\n                      style={{\n                        default: {\n                          fill: \"#D6D6DA\",\n                          outline: \"none\"\n                        },\n                        hover: {\n                          fill: \"#F53\",\n                          outline: \"none\"\n                        },\n                        pressed: {\n                          fill: \"#E42\",\n                          outline: \"none\"\n                        }\n                      }}\n                    />\n                  ))\n                }\n              </Geographies>    \n              <>\n                {\n                  data.map(function (item, index) {\n                    return (\n                      <Marker key={index}\n                        coordinates={[item.longitude, item.latitude]}\n                        onClick={() => setPopupData({\n                          country: item.country,\n                          confirmed: item.confirmed,\n                          deaths:  item.death,\n                          recovered: item.recovered\n                        })}\n                        \n                      >\n                        <circle style={{cursor: \"pointer\"}} r={item.rayon / position.k} fill={theme.palette.primary.main} stroke=\"#607D8B\" strokeWidth={0.3}/>\n                      </Marker>\n                    )\n                  })\n                }\n              </>\n            </>\n          )}\n        </CustomZoomableGroup>\n      </ComposableMap>\n    </Box>\n  );\n};\n\nexport default memo(MapChart);\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles'\nimport dateformat from \"dateformat\";\nimport { CircularProgress } from '@material-ui/core';\n\nconst Update = ({ date }) => {\n    const classes = useStyles();\n    const [updateDate, setUpdateDate] = useState(-1);\n\n    useEffect(() => {\n        if (date !== 0) {\n            const formattedDate = dateformat(date, \"m/d/yyyy hh:MM:ss TT\");\n            console.log(\"DATE FORMAT \", formattedDate);\n            setUpdateDate(formattedDate);\n        }\n    }, [date]);\n\n    return (\n        <div>\n            <p className={classes.title}>Last Updated at (M/D/YYYY)</p>\n            {updateDate === -1 && (\n                <div>\n                    <CircularProgress className={classes.loading} />\n                </div>\n            )}\n            {updateDate !== -1 && (\n                <p className={classes.number}>{updateDate}</p>\n            )}\n        </div>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        margin: 0,\n        marginTop: 10,\n        fontSize: \"1vw\",\n    },\n    number: {\n        margin: 0,\n        fontSize: \"1.5vw\",\n        fontWeight: \"bold\",\n        color: \"white\",\n    },\n    loading: {\n        marginTop: 10\n    }\n}))\n\nexport default Update","import React from 'react';\nimport Chart from 'react-apexcharts'\n\nconst Donut = ({ data }) => {\n\n  var infos = null\n  if (data) {\n    infos = {\n      options: {\n        labels: [\"Confirmed\", \"Deaths\", \"Recovered\"],\n        legend: {\n          labels: {\n              colors: ['#FFFFF']\n          }\n        }\n      },\n      series: [data.confirmed, data.deaths, data.recovered],\n    };\n  }\n\n  return (\n    <>\n      {data && (\n        <div className=\"donut\">\n          <Chart options={infos.options} series={infos.series} type=\"donut\" width=\"260\" />\n        </div>\n      )}\n    </>\n  );\n\n}\n\n\nexport default Donut;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Divider, Box } from \"@material-ui/core\";\nimport Pie from \"./Pie\";\n\nconst MapPopup = ({ popupData }) => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      {popupData && (\n        <div>\n          <Box className={classes.mainContainer}>\n            <Box className={classes.leftContainer}>\n              <p className={classes.country}>{popupData.country}</p>\n              <Divider />\n              <Box className={classes.dataContainer}>\n                <Box className={classes.data}>\n                  <p>Confirmed: <span className={classes.confirmed}>{popupData.confirmed.toLocaleString(\"fr-Fr\")}</span></p>\n                  <p>Deaths: <span className={classes.deaths}>{popupData.deaths.toLocaleString(\"fr-Fr\")}</span></p>\n                  <p>Recovered: <span className={classes.recovered}>{popupData.recovered.toLocaleString(\"fr-Fr\")}</span></p>\n                </Box>\n                <Divider orientation=\"vertical\" flexItem variant=\"middle\" light={true} />\n                <Box>\n                  <Pie data={popupData} />\n                </Box>\n              </Box>\n            </Box>\n            <Box className={classes.signatureContainer}>\n              <p style={{ fontSize: \"2vh\" }}>Réalisé par :</p>\n              <img className={classes.signature} src=\"https://fontmeme.com/permalink/200526/ae3d981f7dcca22b45e492e5d2651652.png\" alt=\"polices-de-signature\" border=\"0\" />\n              <img className={classes.signature} src=\"https://fontmeme.com/permalink/200526/798efc5010d60b7e8c546de546f4b89b.png\" alt=\"polices-de-signature\" border=\"0\" />\n            </Box>\n          </Box>\n        </div>\n      )}\n      {!popupData && (\n        <Box className={classes.signaturefull}>\n          <p style={{ fontSize: \"2vh\" }}>Réalisé par :</p>\n          <img className={classes.signature} src=\"https://fontmeme.com/permalink/200526/ae3d981f7dcca22b45e492e5d2651652.png\" alt=\"polices-de-signature\" border=\"0\" />\n          <img className={classes.signature} src=\"https://fontmeme.com/permalink/200526/798efc5010d60b7e8c546de546f4b89b.png\" alt=\"polices-de-signature\" border=\"0\" />\n        </Box>\n      )}\n    </div>\n  )\n};\n\nconst useStyles = makeStyles(theme => ({\n  country: {\n    margin: 0,\n    marginBottom: 2,\n    textAlign: \"center\",\n    fontSize: \"2vh\"\n  },\n  leftContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyItems: \"space-between\"\n  },\n  mainContainer: {\n    display: \"flex\",\n    justifyItems: \"space-between\"\n  },\n  dataContainer: {\n    display: \"flex\",\n  },\n  data: {\n    marginLeft: 5,\n    marginRight: 10\n  },\n  deaths: {\n    fontWeight: \"bold\"\n  },\n  devider: {\n    margin: 5\n  },\n  confirmed: {\n    fontWeight: \"bold\",\n    color: theme.palette.primary.main\n  },\n  signatureContainer: {\n    textAlign: \"center\",\n    width: '50%'\n  },\n  signaturefull: {\n    textAlign: \"center\",\n    width: '100%'\n  },\n  recovered: {\n    fontWeight: \"bold\",\n    color: \"#77b200\"\n  },\n  signature: {\n    width: 120,\n    margin: 15\n  }\n}));\n\nexport default MapPopup;","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport Total from \"./components/Total\";\nimport Box from \"@material-ui/core/Box\";\nimport Graph from './components/Graph';\nimport TableCountry from \"./components/TableCountry\"\nimport WorldMap from \"./components/WorldMap\"\nimport Update from \"./components/Update\"\nimport theme from \"./theme\";\nimport CountryJson from \"./countryData.json\"\nimport { CircularProgress } from '@material-ui/core';\nimport ReactTooltip from \"react-tooltip\";\nimport MapPopup from \"./components/MapPopup\";\n\nfunction App() {\n  const classes = useStyles();\n  const [total, setTotal] = useState(-1);\n  const [deaths, setDeaths] = useState(-1);\n  const [recovered, setRecovered] = useState(-1);\n  const [selectedCountry, setSelectedCountry] = useState({\n    country: \"\",\n    code: \"\"\n  });\n  const [updateDate, setUpdateDate] = useState(0);\n  const [isRequestSuccess, setIsRequestSuccess] = useState(false);\n  const [country, setCountry] = useState({\n    mainCountry: \"\",\n    mainSlug: \"\",\n    province: \"\"\n  });\n  const [initialTotal, setInitialTotal] = useState(null);\n  const [confirmedDataTable, setConfirmedDataTable] = useState([]);\n  const [deathsDataTable, setDeathsDataTable] = useState([]);\n  const [recoveredDataTable, setRecoveredDataTable] = useState([]);\n  const [tabsValue, setTabsValue] = React.useState(0);\n  const [countryData, setCountryData] = useState([]);\n  const [MapWorld, setMapWorld] = useState([]);\n  const [PopupData, setPopupData] = useState();\n\n  useEffect(() => {\n    console.log(\"IN USE EFFECT\", selectedCountry);\n    let data = {\n      mainCountry: \"\",\n      mainSlug: \"\",\n      province: \"\"\n    }\n    CountryJson.forEach(value => {\n      if (value.Country === selectedCountry.country) {\n        if (value.mainCountry) {\n          data.mainCountry = value.mainCountry;\n          data.mainSlug = value.mainSlug;\n          data.province = selectedCountry.country;\n        }\n        else {\n          data.mainCountry = value.Country;\n          data.mainSlug = value.Slug;\n          data.province = \"\";\n        }\n        setCountry(data);\n      }\n    });\n  }, [selectedCountry])\n\n  useEffect(() => {\n    var confirmedDataArray = [];\n    var deathsDataArray = [];\n    var recoveredDataArray = [];\n    var CodeAndDeathArray = [];\n    console.log(\"IN TABLE REQUEST\");\n    if (isRequestSuccess !== true) {\n      axios.get(\"https://api.covid19api.com/summary\")\n        .then(res => {\n          res.data.Countries.forEach(function (item) {\n            var confirmedData = {};\n            var deathsData = {};\n            var recoveredData = {};\n            var CodeAndDeath = {};\n            confirmedData[\"left\"] = item.Country;\n            confirmedData[\"right\"] = item.TotalConfirmed;\n            confirmedData[\"deaths\"] = item.TotalDeaths;\n            confirmedData[\"recovered\"] = item.TotalRecovered;\n            confirmedData[\"code\"] = item.CountryCode;\n            deathsData[\"left\"] = item.Country;\n            deathsData[\"right\"] = item.TotalDeaths;\n            deathsData[\"confirmed\"] = item.TotalConfirmed;\n            deathsData[\"code\"] = item.CountryCode;\n            recoveredData[\"left\"] = item.Country;\n            recoveredData[\"right\"] = item.TotalRecovered;\n            recoveredData[\"code\"] = item.CountryCode;\n            CodeAndDeath[\"country\"] = item.Country;\n            CodeAndDeath[\"code\"] = item.CountryCode;\n            CodeAndDeath[\"death\"] = item.TotalDeaths;\n            CodeAndDeath[\"confirmed\"] = item.TotalConfirmed;\n            CodeAndDeath[\"recovered\"] = item.TotalRecovered;\n            CodeAndDeath[\"latitude\"] = \"\"\n            CodeAndDeath[\"longitude\"] = \"\"\n            CodeAndDeath[\"rayon\"] = \"\"\n\n            CodeAndDeathArray.push(CodeAndDeath);\n            confirmedDataArray.push(confirmedData);\n            deathsDataArray.push(deathsData)\n            recoveredDataArray.push(recoveredData)\n          })\n\n          // countryConfirmedCases.sort(sortTotalCases);\n          // setCountryData(countryConfirmedCases);\n          setMapWorld(CodeAndDeathArray);\n          setConfirmedDataTable(confirmedDataArray);\n          setDeathsDataTable(deathsDataArray);\n          setRecoveredDataTable(recoveredDataArray);\n          setUpdateDate(res.data.Date);\n          setIsRequestSuccess(true);\n        })\n        .catch(err => {\n          console.log(\"GRAPH ERRR\", err);\n          if (isRequestSuccess === false)\n            setIsRequestSuccess(null);\n          else\n            setIsRequestSuccess(false);\n        })\n    }\n  }, [isRequestSuccess, setUpdateDate])\n\n  const [content, setContent] = useState(\"\");\n\n  return (\n    <div className={classes.mainContainer}>\n\n      {/* LEFT */}\n      <Box className={classes.leftBox}>\n          <Box border={2} borderColor={theme.palette.primary.main} className={classes.totalContainer} boxShadow={7}>\n            <Total total={total} setTotal={setTotal} setDeaths={setDeaths} setRecovered={setRecovered} setInitialTotal={setInitialTotal} />\n          </Box>\n          <Box className={classes.tableCountryContainer} boxShadow={7}>\n            <Box className={classes.tableHeaderContainer} boxShadow={7} >\n              <Box>\n                <p>Country Name</p>\n              </Box>\n              <Box className={classes.rightHeader}>\n                <p>Confirmed cases</p>\n              </Box>\n            </Box>\n            <TableCountry\n              setSelectedCountry={setSelectedCountry}\n              initialTotal={initialTotal}\n              setConfirmed={setTotal}\n              setDeaths={setDeaths}\n              setRecovered={setRecovered}\n              data={confirmedDataTable}\n              setChartData={setCountryData}\n              status=\"confirmed\"\n              height=\"55vh\" />\n          </Box>\n          <Box border={2} borderColor={theme.palette.primary.main} className={classes.updateContainer} boxShadow={7}>\n            <Update date={updateDate} />\n          </Box>\n        </Box>\n\n      {/* CENTER */}\n\n      <Box className={classes.centerBox}>\n        <Box className={classes.parentMap}>\n          <Box className={classes.mapContainer} boxShadow={3} borderRadius={10}>\n            <WorldMap setTooltipContent={setContent} MapWorld={MapWorld} currentCountryCode={selectedCountry.code} setPopupData={setPopupData} />\n            <ReactTooltip>{content}</ReactTooltip>\n          </Box>\n        </Box>\n        <Box className={classes.bottomContainer} boxShadow={3} borderRadius={5}>\n          <MapPopup popupData={PopupData} />\n        </Box>\n      </Box>\n\n      {/* RIGHT */}\n\n      <Box className={classes.rightBox}>\n        <Box className={classes.rightTablesContainer}>\n          <Box className={classes.leftTable}>\n            <Box className={classes.leftTableHeaderContainer} boxShadow={7} >\n              <Box>\n                <p className={classes.tableTitle}>Global deaths</p>\n              </Box>\n              {deaths === -1 && (\n                <div>\n                  <CircularProgress className={classes.loading} />\n                </div>\n              )}\n              {deaths !== -1 && (\n                <Box>\n                  <p className={classes.deathsCount}>{deaths.toLocaleString(\"fr-FR\")}</p>\n                </Box>\n              )}\n            </Box>\n            <TableCountry\n              setSelectedCountry={setSelectedCountry}\n              initialTotal={initialTotal}\n              setConfirmed={setTotal}\n              setDeaths={setDeaths}\n              setRecovered={setRecovered}\n              data={deathsDataTable}\n              currentCountry={country}\n              setChartTabsValue={setTabsValue}\n              setChartData={setCountryData}\n              status=\"deaths\"\n              height=\"45vh\" \n              countColor=\"#ff0000\"\n              />\n          </Box>\n          <Box className={classes.rightTable}>\n            <Box className={classes.leftTableHeaderContainer} boxShadow={7} >\n              <Box>\n                <p className={classes.tableTitle}>Global recovered</p>\n              </Box>\n              {deaths === -1 && (\n                <div>\n                  <CircularProgress className={classes.loading} />\n                </div>\n              )}\n              {deaths !== -1 && (\n                <Box>\n                  <p className={classes.recoveredCount}>{recovered.toLocaleString(\"fr-FR\")}</p>\n                </Box>\n              )}\n            </Box>\n            <TableCountry\n              setSelectedCountry={setSelectedCountry}\n              initialTotal={initialTotal}\n              setConfirmed={setTotal}\n              setDeaths={setDeaths}\n              setRecovered={setRecovered}\n              data={recoveredDataTable}\n              currentCountry={country}\n              setChartTabsValue={setTabsValue}\n              setChartData={setCountryData}\n              status=\"recovered\"\n              height=\"45vh\"\n              countColor=\"#77b200\"\n            />\n          </Box>\n        </Box>\n        <Box className={classes.chartsContainer} boxShadow={1}>\n          <Graph currentCountry={country} tabsValue={tabsValue} setTabsValue={setTabsValue} countryData={countryData} setCountryData={setCountryData} />\n        </Box>\n      </Box>\n\n    </div >\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  mainContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    margin: 20\n  },\n  '@global': {\n    '*::-webkit-scrollbar': {\n      width: '0.4em'\n    },\n    '*::-webkit-scrollbar-track': {\n      '-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.00)'\n    },\n    '*::-webkit-scrollbar-thumb': {\n      backgroundColor: theme.palette.primary.main,\n      borderRadius: 5,\n      outline: '1px solid slategrey'\n    }\n  },\n\n  // LEFT\n\n  leftBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    width: \"20%\",\n    height: \"95vh\",\n    marginRight: 15\n  },\n  totalContainer: {\n    width: \"100%\",\n    color: \"white\",\n    borderRadius: 5,\n    textAlign: \"center\",\n  },\n  tableCountryContainer: {\n    width: \"100%\",\n    borderRadius: 5,\n    height: \"62vh\"\n  },\n  tableHeaderContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: 10,\n  },\n  updateContainer: {\n    width: \"100%\",\n    color: \"white\",\n    borderRadius: 5,\n    textAlign: \"center\",\n  },\n\n  // CENTER\n\n  centerBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    width: \"60%\",\n    height: \"95vh\",\n  },\n  mapContainer: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  bottomContainer: {\n    paddingLeft: 15,\n    paddingRight: 15,\n    width: \"100%\",\n    height: \"50%\"\n  },\n  parentMap: {\n    position: \"relative\"\n  },\n  hideMapPopup: {\n    display: \"none\"\n  },\n  mapPopup: {\n    position: \"absolute\",\n    top: 0,\n    padding: 5,\n    width: \"30%\",\n    minHeight: \"15%\"\n  },\n\n  // RIGHT\n  rightBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    width: \"30%\",\n    marginLeft: 15\n  },\n  rightTablesContainer: {\n    display: \"flex\",\n    jusityContent: \"space-between\",\n    height: \"100%\",\n    marginBottom: 15\n  },\n  leftTable: {\n    width: \"100%\",\n    marginRight: 10\n  },\n  leftTableHeaderContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    margin: 0,\n    padding: 0\n  },\n  tableTitle: {\n    padding: 0,\n    margin: 0\n  },\n  loading: {\n    marginTop: 10\n  },\n  deathsCount: {\n    padding: 0,\n    margin: 0,\n    fontSize: \"2.1vw\",\n    fontWeight: \"bold\",\n  },\n  recoveredCount: {\n    padding: 0,\n    margin: 0,\n    fontSize: \"2.1vw\",\n    fontWeight: \"bold\",\n    color: \"#70A800\"\n  },\n  rightTable: {\n    width: \"100%\"\n  },\n  chartsContainer: {\n    width: \"100%\",\n    height: \"45%\",\n    marginRight: 5,\n  },\n}))\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n    <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}